apiVersion: v1
kind: ServiceAccount
metadata:
  name: dsv-injector
  namespace: openfga-system
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dsv-injector
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingadmissionwebhooks"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dsv-injector
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dsv-injector
subjects:
- kind: ServiceAccount
  name: dsv-injector
  namespace: openfga-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dsv-injector
  namespace: openfga-system
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: dsv-injector
      app.kubernetes.io/component: secrets-management
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dsv-injector
        app.kubernetes.io/component: secrets-management
    spec:
      serviceAccountName: dsv-injector
      containers:
      - name: dsv-injector
        image: delinea/dsv-injector:1.0.4
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook
        env:
        - name: TLS_CERT_FILE
          value: /etc/certs/tls.crt
        - name: TLS_KEY_FILE
          value: /etc/certs/tls.key
        - name: DSV_SERVER
          valueFrom:
            secretKeyRef:
              name: dsv-config
              key: server
        - name: DSV_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dsv-config
              key: clientId
        - name: DSV_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dsv-config
              key: clientSecret
        volumeMounts:
        - name: certs
          mountPath: /etc/certs
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: certs
        secret:
          secretName: dsv-injector-certs
---
apiVersion: v1
kind: Service
metadata:
  name: dsv-injector
  namespace: openfga-system
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: 8443
    protocol: TCP
    name: webhook
  selector:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingAdmissionWebhook
metadata:
  name: dsv-injector
  labels:
    app.kubernetes.io/name: dsv-injector
    app.kubernetes.io/component: secrets-management
webhooks:
- name: dsv-injector.delinea.com
  clientConfig:
    service:
      name: dsv-injector
      namespace: openfga-system
      path: "/mutate"
    caBundle: ""
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail
  namespaceSelector:
    matchLabels:
      dsv-injection: "enabled"