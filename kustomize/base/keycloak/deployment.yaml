apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: openfga-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/component: identity-provider
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: identity-provider
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:23.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-admin
              key: username
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin
              key: password
        - name: KC_DB
          value: "postgres"
        - name: KC_DB_URL
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: database-url
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: keycloak-db
              key: username
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-db
              key: password
        - name: KC_HOSTNAME_STRICT
          value: "false"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_PROXY
          value: "edge"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        args:
        - "start"
        - "--optimized"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 9000
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: management
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health/ready
            port: management
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: keycloak-data
          mountPath: /opt/keycloak/data
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: keycloak-data
        persistentVolumeClaim:
          claimName: keycloak-data
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
              topologyKey: kubernetes.io/hostname